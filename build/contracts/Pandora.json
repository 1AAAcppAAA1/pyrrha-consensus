{
  "contractName": "Pandora",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_job",
          "type": "address"
        }
      ],
      "name": "isActiveJob",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "workerNodesCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_workerOwner",
          "type": "address"
        }
      ],
      "name": "whitelistWorkerOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishCognitiveJob",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "workerNodes",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeJobs",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "RESULT_CODE_JOB_CREATED",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cognitiveJobFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "activeJobsCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "jobAddresses",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_guiltyWorker",
          "type": "address"
        },
        {
          "name": "_reason",
          "type": "uint8"
        }
      ],
      "name": "penaltizeWorkerNode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "workerNodeOwners",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_workerOwner",
          "type": "address"
        }
      ],
      "name": "blacklistWorkerOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "RESULT_CODE_ADD_TO_QUEUE",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createWorkerNode",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_workerNode",
          "type": "address"
        }
      ],
      "name": "destroyWorkerNode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_arrayLength",
          "type": "uint256"
        },
        {
          "name": "_numbersRange",
          "type": "uint256"
        }
      ],
      "name": "getRandomArray",
      "outputs": [
        {
          "name": "o_result",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_kernel",
          "type": "address"
        },
        {
          "name": "_dataset",
          "type": "address"
        }
      ],
      "name": "createCognitiveJob",
      "outputs": [
        {
          "name": "o_cognitiveJob",
          "type": "address"
        },
        {
          "name": "o_resultCode",
          "type": "uint8"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "workerNodeFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "workerAddresses",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_jobFactory",
          "type": "address"
        },
        {
          "name": "_nodeFactory",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "cognitiveJob",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "resultCode",
          "type": "uint256"
        }
      ],
      "name": "CognitiveJobCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "cognitiveJob",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "resultCode",
          "type": "uint256"
        }
      ],
      "name": "CognitiveJobCreateFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "workerNode",
          "type": "address"
        }
      ],
      "name": "WorkerNodeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "workerNode",
          "type": "address"
        }
      ],
      "name": "WorkerNodeDestroyed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "cognitiveJob",
          "type": "address"
        }
      ],
      "name": "CognitiveJobCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000600460006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405160408062004e9183398101806040528101908080519060200190929190805190602001909291905050508181806601c6bf526340006003819055506601c6bf526340006000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600460006101000a81548160ff02191690831515021790555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200014e57600080fd5b80600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515620001cd57600080fd5b81601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200021862000280565b604051809103906000f08015801562000235573d6000803e3d6000fd5b50601460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000291565b6040516101038062004d8e83390190565b614aed80620002a16000396000f3006080604052600436106101cd576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101d2578063095ea7b3146102625780630ba58574146102c75780630e3b581f1461032257806313b5165f1461034d578063158ef93e1461039057806317131751146103bf57806318160ddd146103d65780631dc20af41461040157806321b0908b1461046e57806323b872dd146104db57806323ce524a146105605780632ff2e9dc14610591578063313ce567146105bc57806336bad828146105e757806354fd4d501461063e5780635c2b37fa146106715780635ecc2e441461069c5780635ef17776146106fb578063661884631461074b57806370064e33146107b057806370a082311461080b5780637b3c611c146108625780638129fc1c146108a557806383c94c69146108bc57806386b07332146108ed5780638da5cb5b1461094457806395d89b411461099b578063a9059cbb14610a2b578063ae1092ae14610a90578063d73dd62314610ad3578063dd62ed3e14610b38578063ea449e0f14610baf578063f2fde38b14610c3b578063f9bb6cfe14610c7e578063f9d84ade14610d21578063fdb5b8d414610d78575b600080fd5b3480156101de57600080fd5b506101e7610dd7565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022757808201518184015260208101905061020c565b50505050905090810190601f1680156102545780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561026e57600080fd5b506102ad600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e10565b604051808215151515815260200191505060405180910390f35b3480156102d357600080fd5b50610308600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f02565b604051808215151515815260200191505060405180910390f35b34801561032e57600080fd5b50610337611011565b6040518082815260200191505060405180910390f35b34801561035957600080fd5b5061038e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611040565b005b34801561039c57600080fd5b506103a56110f7565b604051808215151515815260200191505060405180910390f35b3480156103cb57600080fd5b506103d461110a565b005b3480156103e257600080fd5b506103eb61161c565b6040518082815260200191505060405180910390f35b34801561040d57600080fd5b5061042c60048036038101908080359060200190929190505050611626565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561047a57600080fd5b5061049960048036038101908080359060200190929190505050611664565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104e757600080fd5b50610546600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116a2565b604051808215151515815260200191505060405180910390f35b34801561056c57600080fd5b50610575611a5c565b604051808260ff1660ff16815260200191505060405180910390f35b34801561059d57600080fd5b506105a6611a61565b6040518082815260200191505060405180910390f35b3480156105c857600080fd5b506105d1611a6c565b6040518082815260200191505060405180910390f35b3480156105f357600080fd5b506105fc611a71565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561064a57600080fd5b50610653611a97565b60405180826000191660001916815260200191505060405180910390f35b34801561067d57600080fd5b50610686611abb565b6040518082815260200191505060405180910390f35b3480156106a857600080fd5b506106dd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611aea565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801561070757600080fd5b50610749600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050611b0b565b005b34801561075757600080fd5b50610796600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b31565b604051808215151515815260200191505060405180910390f35b3480156107bc57600080fd5b506107f1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dc2565b604051808215151515815260200191505060405180910390f35b34801561081757600080fd5b5061084c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611de2565b6040518082815260200191505060405180910390f35b34801561086e57600080fd5b506108a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e2a565b005b3480156108b157600080fd5b506108ba611ed8565b005b3480156108c857600080fd5b506108d1612278565b604051808260ff1660ff16815260200191505060405180910390f35b3480156108f957600080fd5b5061090261227d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561095057600080fd5b5061095961257d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109a757600080fd5b506109b06125a3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109f05780820151818401526020810190506109d5565b50505050905090810190601f168015610a1d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610a3757600080fd5b50610a76600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506125dc565b604051808215151515815260200191505060405180910390f35b348015610a9c57600080fd5b50610ad1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127fb565b005b348015610adf57600080fd5b50610b1e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612d4e565b604051808215151515815260200191505060405180910390f35b348015610b4457600080fd5b50610b99600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f4a565b6040518082815260200191505060405180910390f35b348015610bbb57600080fd5b50610be46004803603810190808035906020019092919080359060200190929190505050612fd1565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c27578082015181840152602081019050610c0c565b505050509050019250505060405180910390f35b348015610c4757600080fd5b50610c7c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613111565b005b610cd2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613269565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390f35b348015610d2d57600080fd5b50610d366137d1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d8457600080fd5b50610db9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506137f7565b604051808261ffff1661ffff16815260200191505060405180910390f35b6040805190810160405280600781526020017f50616e646f72610000000000000000000000000000000000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600080600060011515600460009054906101000a900460ff161515141515610f2957600080fd5b601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff16915060008261ffff161415610f8f576000925061100a565b81806001900392505060128261ffff16815481101515610fab57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161492505b5050919050565b600060011515600460009054906101000a900460ff16151514151561103557600080fd5b600d80549050905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561109c57600080fd5b6001600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600460009054906101000a900460ff1681565b60008060008060011515600460009054906101000a900460ff16151514151561113257600080fd5b601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff16935060008461ffff161415151561119657600080fd5b83806001900394505060128461ffff168154811015156111b257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151561121957600080fd5b600091505b8273ffffffffffffffffffffffffffffffffffffffff16634804b4ba6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561128257600080fd5b505af1158015611296573d6000803e3d6000fd5b505050506040513d60208110156112ac57600080fd5b81019080805190602001909291905050508210156114ad57600115158373ffffffffffffffffffffffffffffffffffffffff1663d6ccdca3846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15801561133757600080fd5b505af115801561134b573d6000803e3d6000fd5b505050506040513d602081101561136157600080fd5b8101908080519060200190929190505050151514156114a0578273ffffffffffffffffffffffffffffffffffffffff166358909400836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156113e957600080fd5b505af11580156113fd573d6000803e3d6000fd5b505050506040513d602081101561141357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663e5469d9f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561148757600080fd5b505af115801561149b573d6000803e3d6000fd5b505050505b818060010192505061121e565b601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549061ffff0219169055601260016012805490500381548110151561151457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660128561ffff1681548110151561155257fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055905060018401601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff160217905550601280548091906001900361160d91906149e0565b50611616613818565b50505050565b6000600354905090565b600d8181548110151561163557fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60128181548110151561167357fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156116df57600080fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561172c57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156117b757600080fd5b611808826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b2b90919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061189b826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b4490919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061196c82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b2b90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600181565b6601c6bf5263400081565b601281565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f302e332e3900000000000000000000000000000000000000000000000000000081565b600060011515600460009054906101000a900460ff161515141515611adf57600080fd5b601280549050905090565b60116020528060005260406000206000915054906101000a900461ffff1681565b60011515600460009054906101000a900460ff161515141515611b2d57600080fd5b5050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115611c42576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611cd6565b611c558382613b2b90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b600f6020528060005260406000206000915054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e8657600080fd5b600f60008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905550565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611f3457600080fd5b6040805190810160405280600a81526020017f696e697469616c697a650000000000000000000000000000000000000000000081525060001515600b826040518082805190602001908083835b602083101515611fa65780518252602082019150602081019050602083039250611f81565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff161515141515611ff557600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561209257600080fd5b505af11580156120a6573d6000803e3d6000fd5b505050506040513d60208110156120bc57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415156120ef57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561218c57600080fd5b505af11580156121a0573d6000803e3d6000fd5b505050506040513d60208110156121b657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415156121e957600080fd5b6121f1613b60565b6001600b826040518082805190602001908083835b60208310151561222b5780518252602082019150602081019050602083039250612206565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff02191690831515021790555050565b600081565b600080600060011515600460009054906101000a900460ff1615151415156122a457600080fd5b60011515600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561230357600080fd5b3391503273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561234057600080fd5b600d808054905010151561235357600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639ed93318836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561241057600080fd5b505af1158015612424573d6000803e3d6000fd5b505050506040513d602081101561243a57600080fd5b81019080805190602001909291905050509050600d8190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600d80549050600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff1602179055507f093794466f44429afc8d8ec2c4c7f42c98d5db9b3db965ce46a31e7d4f7c29c881604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1809250505090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600381526020017f50414e000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561261957600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561266657600080fd5b6126b7826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b2b90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061274a826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b4490919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60008060008360003390508173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561286a57600080fd5b505af115801561287e573d6000803e3d6000fd5b505050506040513d602081101561289457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156128de57600080fd5b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff1661ffff1611151561293e57600080fd5b60011515600460009054906101000a900460ff16151514151561296057600080fd5b3394508573ffffffffffffffffffffffffffffffffffffffff1663ae897c556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156129c757600080fd5b505af11580156129db573d6000803e3d6000fd5b505050506040513d60208110156129f157600080fd5b810190808051906020019092919050505060ff168673ffffffffffffffffffffffffffffffffffffffff16630c3f6acf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612a6957600080fd5b505af1158015612a7d573d6000803e3d6000fd5b505050506040513d6020811015612a9357600080fd5b810190808051906020019092919050505060ff16141515612ab357600080fd5b8573ffffffffffffffffffffffffffffffffffffffff166383197ef06040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015612b1757600080fd5b505af1158015612b2b573d6000803e3d6000fd5b505050506001600e60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff16039350600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549061ffff0219169055600d6001600d8054905003815481101515612be957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600d8561ffff16815481101515612c2757fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055925060018401600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff160217905550600d805480919060019003612ce29190614a0c565b507f677f03e392472a48b617167ed4dbec758d26d8517257ec077bed2d27d192816486604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505050505050565b6000612ddf82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b4490919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60606000836040519080825280602002602001820160405280156130045781602001602082028038833980820191505090505b509150600090505b815181101561310a57601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd4b6914846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156130a657600080fd5b505af11580156130ba573d6000803e3d6000fd5b505050506040513d60208110156130d057600080fd5b810190808051906020019092919050505082828151811015156130ef57fe5b9060200190602002018181525050808060010191505061300c565b5092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561316d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156131a957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008060606000606060011515600460009054906101000a900460ff16151514151561329757600080fd5b600a8873ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156132fd57600080fd5b505af1158015613311573d6000803e3d6000fd5b505050506040513d602081101561332757600080fd5b810190808051906020019092919050505060ff161115151561334857600080fd5b8773ffffffffffffffffffffffffffffffffffffffff1663b1f8d9ba6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156133ac57600080fd5b505af11580156133c0573d6000803e3d6000fd5b505050506040513d60208110156133d657600080fd5b81019080805190602001909291905050508973ffffffffffffffffffffffffffffffffffffffff1663b1f8d9ba6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561344b57600080fd5b505af115801561345f573d6000803e3d6000fd5b505050506040513d602081101561347557600080fd5b810190808051906020019092919050505014151561349257600080fd5b600d6012805490501015156134a657600080fd5b6134ae613b7d565b94508773ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561351457600080fd5b505af1158015613528573d6000803e3d6000fd5b505050506040513d602081101561353e57600080fd5b810190808051906020019092919050505093508360ff168510156135f4576000955061357a898934336015613d6f90949392919063ffffffff16565b507fea6be648d373c4709986e67f6b7ee9ef9875b1243f38efc6bd48024bc10f8aac8787604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1681526020019250505060405180910390a18686965096506137c5565b6135fd85613f37565b9250825191506136ae838973ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561366b57600080fd5b505af115801561367f573d6000803e3d6000fd5b505050506040513d602081101561369557600080fd5b810190808051906020019092919050505060ff166141e4565b90506136bb8989836142c5565b96506001955061371334601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b4490919063ffffffff16565b601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f422ca471d1a1b69b87453d0f5149fd001dc7fd04fc2b5b8b8d70b17398a9b85a8787604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1681526020019250505060405180910390a15b50505050509250929050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600e6020528060005260406000206000915054906101000a900461ffff1681565b613820614a38565b60008060008060606000806060600080600060011515600460009054906101000a900460ff16151514151561385457600080fd5b600a9a50600099505b613867601561468e565b8a108061387357508a8a105b15613b1d575a9850613883613b7d565b975060008811151561389457613b1d565b61389d88613f37565b96508651955087861415156138b157613b1d565b6138c58660156146a590919063ffffffff16565b15156138d057613b1d565b6138da601561476f565b809650819d505050613991878d6020015173ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561394e57600080fd5b505af1158015613962573d6000803e3d6000fd5b505050506040513d602081101561397857600080fd5b810190808051906020019092919050505060ff166141e4565b93506139a68c600001518d60200151866142c5565b9250600160ff1691507f422ca471d1a1b69b87453d0f5149fd001dc7fd04fc2b5b8b8d70b17398a9b85a8383604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a13a5a8a03811515613a2757fe5b0490503273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015613a70573d6000803e3d6000fd5b50613ac9858203601360008f6040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b2b90919063ffffffff16565b601360008e6040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555089806001019a505061385d565b505050505050505050505050565b6000828211151515613b3957fe5b818303905092915050565b60008183019050828110151515613b5757fe5b80905092915050565b6001600460006101000a81548160ff021916908315150217905550565b60008060009150600090505b600d80549050811015613d6857600d81815481101515613ba557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae897c556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015613c3357600080fd5b505af1158015613c47573d6000803e3d6000fd5b505050506040513d6020811015613c5d57600080fd5b810190808051906020019092919050505060ff16600d82815481101515613c8057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c3f6acf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015613d0e57600080fd5b505af1158015613d22573d6000803e3d6000fd5b505050506040513d6020811015613d3857600080fd5b810190808051906020019092919050505060ff161415613d5b5781806001019250505b8080600101915050613b89565b8191505090565b600085600001805490506001876000018054905001111515613d9057600080fd5b856000016060604051908101604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505085600101839080600181540180825580915050906001820390600052602060002001600090919290919091505550613f2c8661468e565b905095945050505050565b60608060008084604051908082528060200260200182016040528015613f6c5781602001602082028038833980820191505090505b50925060009150600090505b600d805490508110156141d957600d81815481101515613f9457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae897c556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561402257600080fd5b505af1158015614036573d6000803e3d6000fd5b505050506040513d602081101561404c57600080fd5b810190808051906020019092919050505060ff16600d8281548110151561406f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c3f6acf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156140fd57600080fd5b505af1158015614111573d6000803e3d6000fd5b505050506040513d602081101561412757600080fd5b810190808051906020019092919050505060ff1614156141cc57600d8181548110151561415057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838380600101945081518110151561418f57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080600101915050613f78565b829350505050919050565b6060806000836040519080825280602002602001820160405280156142185781602001602082028038833980820191505090505b50925061422783518651612fd1565b9150600090505b82518110156142bd5784828281518110151561424657fe5b9060200190602002015181518110151561425c57fe5b90602001906020020151838281518110151561427457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808060010191505061422e565b505092915050565b600060011515600460009054906101000a900460ff1615151415156142e957600080fd5b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c695d2b8585856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019060200280838360005b838110156143fc5780820151818401526020810190506143e1565b50505050905001945050505050602060405180830381600087803b15801561442357600080fd5b505af1158015614437573d6000803e3d6000fd5b505050506040513d602081101561444d57600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561449957fe5b60ff8173ffffffffffffffffffffffffffffffffffffffff1663cc0e82c16040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156144ff57600080fd5b505af1158015614513573d6000803e3d6000fd5b505050506040513d602081101561452957600080fd5b810190808051906020019092919050505060ff1614151561454657fe5b60128190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050601280549050601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16638129fc1c6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561466f57600080fd5b505af1158015614683573d6000803e3d6000fd5b505050509392505050565b600081600201548260000180549050039050919050565b60006146af614a38565b6146b88461479e565b508091505082816020015173ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561472657600080fd5b505af115801561473a573d6000803e3d6000fd5b505050506040513d602081101561475057600080fd5b810190808051906020019092919050505060ff16111591505092915050565b614777614a38565b60006147828361479e565b809250819350505061479383614905565b818191509150915091565b6147a6614a38565b60008260000183600201548154811015156147bd57fe5b90600052602060002090600302018360010184600201548154811015156147e057fe5b906000526020600020015481606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050915091509150915091565b806002016000815480929190600101919050555080600001600182600201540381548110151561493157fe5b9060005260206000209060030201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508060010160018260020154038154811015156149cf57fe5b906000526020600020016000905550565b815481835581811115614a0757818360005260206000209182019101614a069190614a9c565b5b505050565b815481835581811115614a3357818360005260206000209182019101614a329190614a9c565b5b505050565b606060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b614abe91905b80821115614aba576000816000905550600101614aa2565b5090565b905600a165627a7a7230582095d94c52e0bcd7c0b71b1c954dd1888b6ba4b7fe813ef93a2377e4e2641a439e0029608060405234801561001057600080fd5b506000808190555060dd806100266000396000f300608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063cd4b6914146044575b600080fd5b348015604f57600080fd5b50606c600480360381019080803590602001909291905050506082565b6040518082815260200191505060405180910390f35b600081600054101515609657600080819055505b600054905060008081548092919060010191905055509190505600a165627a7a723058202faea682bdb608fdac703aec72c2ad8a54bc4f0bba8c1d88c690dfc249e72df30029",
  "deployedBytecode": "0x6080604052600436106101cd576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101d2578063095ea7b3146102625780630ba58574146102c75780630e3b581f1461032257806313b5165f1461034d578063158ef93e1461039057806317131751146103bf57806318160ddd146103d65780631dc20af41461040157806321b0908b1461046e57806323b872dd146104db57806323ce524a146105605780632ff2e9dc14610591578063313ce567146105bc57806336bad828146105e757806354fd4d501461063e5780635c2b37fa146106715780635ecc2e441461069c5780635ef17776146106fb578063661884631461074b57806370064e33146107b057806370a082311461080b5780637b3c611c146108625780638129fc1c146108a557806383c94c69146108bc57806386b07332146108ed5780638da5cb5b1461094457806395d89b411461099b578063a9059cbb14610a2b578063ae1092ae14610a90578063d73dd62314610ad3578063dd62ed3e14610b38578063ea449e0f14610baf578063f2fde38b14610c3b578063f9bb6cfe14610c7e578063f9d84ade14610d21578063fdb5b8d414610d78575b600080fd5b3480156101de57600080fd5b506101e7610dd7565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022757808201518184015260208101905061020c565b50505050905090810190601f1680156102545780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561026e57600080fd5b506102ad600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e10565b604051808215151515815260200191505060405180910390f35b3480156102d357600080fd5b50610308600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f02565b604051808215151515815260200191505060405180910390f35b34801561032e57600080fd5b50610337611011565b6040518082815260200191505060405180910390f35b34801561035957600080fd5b5061038e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611040565b005b34801561039c57600080fd5b506103a56110f7565b604051808215151515815260200191505060405180910390f35b3480156103cb57600080fd5b506103d461110a565b005b3480156103e257600080fd5b506103eb61161c565b6040518082815260200191505060405180910390f35b34801561040d57600080fd5b5061042c60048036038101908080359060200190929190505050611626565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561047a57600080fd5b5061049960048036038101908080359060200190929190505050611664565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104e757600080fd5b50610546600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116a2565b604051808215151515815260200191505060405180910390f35b34801561056c57600080fd5b50610575611a5c565b604051808260ff1660ff16815260200191505060405180910390f35b34801561059d57600080fd5b506105a6611a61565b6040518082815260200191505060405180910390f35b3480156105c857600080fd5b506105d1611a6c565b6040518082815260200191505060405180910390f35b3480156105f357600080fd5b506105fc611a71565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561064a57600080fd5b50610653611a97565b60405180826000191660001916815260200191505060405180910390f35b34801561067d57600080fd5b50610686611abb565b6040518082815260200191505060405180910390f35b3480156106a857600080fd5b506106dd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611aea565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801561070757600080fd5b50610749600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050611b0b565b005b34801561075757600080fd5b50610796600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b31565b604051808215151515815260200191505060405180910390f35b3480156107bc57600080fd5b506107f1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dc2565b604051808215151515815260200191505060405180910390f35b34801561081757600080fd5b5061084c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611de2565b6040518082815260200191505060405180910390f35b34801561086e57600080fd5b506108a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e2a565b005b3480156108b157600080fd5b506108ba611ed8565b005b3480156108c857600080fd5b506108d1612278565b604051808260ff1660ff16815260200191505060405180910390f35b3480156108f957600080fd5b5061090261227d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561095057600080fd5b5061095961257d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109a757600080fd5b506109b06125a3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109f05780820151818401526020810190506109d5565b50505050905090810190601f168015610a1d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610a3757600080fd5b50610a76600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506125dc565b604051808215151515815260200191505060405180910390f35b348015610a9c57600080fd5b50610ad1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127fb565b005b348015610adf57600080fd5b50610b1e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612d4e565b604051808215151515815260200191505060405180910390f35b348015610b4457600080fd5b50610b99600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f4a565b6040518082815260200191505060405180910390f35b348015610bbb57600080fd5b50610be46004803603810190808035906020019092919080359060200190929190505050612fd1565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c27578082015181840152602081019050610c0c565b505050509050019250505060405180910390f35b348015610c4757600080fd5b50610c7c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613111565b005b610cd2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613269565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390f35b348015610d2d57600080fd5b50610d366137d1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d8457600080fd5b50610db9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506137f7565b604051808261ffff1661ffff16815260200191505060405180910390f35b6040805190810160405280600781526020017f50616e646f72610000000000000000000000000000000000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600080600060011515600460009054906101000a900460ff161515141515610f2957600080fd5b601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff16915060008261ffff161415610f8f576000925061100a565b81806001900392505060128261ffff16815481101515610fab57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161492505b5050919050565b600060011515600460009054906101000a900460ff16151514151561103557600080fd5b600d80549050905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561109c57600080fd5b6001600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600460009054906101000a900460ff1681565b60008060008060011515600460009054906101000a900460ff16151514151561113257600080fd5b601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff16935060008461ffff161415151561119657600080fd5b83806001900394505060128461ffff168154811015156111b257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151561121957600080fd5b600091505b8273ffffffffffffffffffffffffffffffffffffffff16634804b4ba6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561128257600080fd5b505af1158015611296573d6000803e3d6000fd5b505050506040513d60208110156112ac57600080fd5b81019080805190602001909291905050508210156114ad57600115158373ffffffffffffffffffffffffffffffffffffffff1663d6ccdca3846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15801561133757600080fd5b505af115801561134b573d6000803e3d6000fd5b505050506040513d602081101561136157600080fd5b8101908080519060200190929190505050151514156114a0578273ffffffffffffffffffffffffffffffffffffffff166358909400836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156113e957600080fd5b505af11580156113fd573d6000803e3d6000fd5b505050506040513d602081101561141357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663e5469d9f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561148757600080fd5b505af115801561149b573d6000803e3d6000fd5b505050505b818060010192505061121e565b601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549061ffff0219169055601260016012805490500381548110151561151457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660128561ffff1681548110151561155257fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055905060018401601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff160217905550601280548091906001900361160d91906149e0565b50611616613818565b50505050565b6000600354905090565b600d8181548110151561163557fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60128181548110151561167357fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156116df57600080fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561172c57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156117b757600080fd5b611808826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b2b90919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061189b826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b4490919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061196c82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b2b90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600181565b6601c6bf5263400081565b601281565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f302e332e3900000000000000000000000000000000000000000000000000000081565b600060011515600460009054906101000a900460ff161515141515611adf57600080fd5b601280549050905090565b60116020528060005260406000206000915054906101000a900461ffff1681565b60011515600460009054906101000a900460ff161515141515611b2d57600080fd5b5050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115611c42576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611cd6565b611c558382613b2b90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b600f6020528060005260406000206000915054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e8657600080fd5b600f60008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905550565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611f3457600080fd5b6040805190810160405280600a81526020017f696e697469616c697a650000000000000000000000000000000000000000000081525060001515600b826040518082805190602001908083835b602083101515611fa65780518252602082019150602081019050602083039250611f81565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff161515141515611ff557600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561209257600080fd5b505af11580156120a6573d6000803e3d6000fd5b505050506040513d60208110156120bc57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415156120ef57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561218c57600080fd5b505af11580156121a0573d6000803e3d6000fd5b505050506040513d60208110156121b657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415156121e957600080fd5b6121f1613b60565b6001600b826040518082805190602001908083835b60208310151561222b5780518252602082019150602081019050602083039250612206565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff02191690831515021790555050565b600081565b600080600060011515600460009054906101000a900460ff1615151415156122a457600080fd5b60011515600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561230357600080fd5b3391503273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561234057600080fd5b600d808054905010151561235357600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639ed93318836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561241057600080fd5b505af1158015612424573d6000803e3d6000fd5b505050506040513d602081101561243a57600080fd5b81019080805190602001909291905050509050600d8190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600d80549050600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff1602179055507f093794466f44429afc8d8ec2c4c7f42c98d5db9b3db965ce46a31e7d4f7c29c881604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1809250505090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600381526020017f50414e000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561261957600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561266657600080fd5b6126b7826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b2b90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061274a826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b4490919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60008060008360003390508173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561286a57600080fd5b505af115801561287e573d6000803e3d6000fd5b505050506040513d602081101561289457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156128de57600080fd5b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff1661ffff1611151561293e57600080fd5b60011515600460009054906101000a900460ff16151514151561296057600080fd5b3394508573ffffffffffffffffffffffffffffffffffffffff1663ae897c556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156129c757600080fd5b505af11580156129db573d6000803e3d6000fd5b505050506040513d60208110156129f157600080fd5b810190808051906020019092919050505060ff168673ffffffffffffffffffffffffffffffffffffffff16630c3f6acf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612a6957600080fd5b505af1158015612a7d573d6000803e3d6000fd5b505050506040513d6020811015612a9357600080fd5b810190808051906020019092919050505060ff16141515612ab357600080fd5b8573ffffffffffffffffffffffffffffffffffffffff166383197ef06040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015612b1757600080fd5b505af1158015612b2b573d6000803e3d6000fd5b505050506001600e60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff16039350600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549061ffff0219169055600d6001600d8054905003815481101515612be957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600d8561ffff16815481101515612c2757fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055925060018401600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff160217905550600d805480919060019003612ce29190614a0c565b507f677f03e392472a48b617167ed4dbec758d26d8517257ec077bed2d27d192816486604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505050505050565b6000612ddf82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b4490919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60606000836040519080825280602002602001820160405280156130045781602001602082028038833980820191505090505b509150600090505b815181101561310a57601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd4b6914846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156130a657600080fd5b505af11580156130ba573d6000803e3d6000fd5b505050506040513d60208110156130d057600080fd5b810190808051906020019092919050505082828151811015156130ef57fe5b9060200190602002018181525050808060010191505061300c565b5092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561316d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156131a957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008060606000606060011515600460009054906101000a900460ff16151514151561329757600080fd5b600a8873ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156132fd57600080fd5b505af1158015613311573d6000803e3d6000fd5b505050506040513d602081101561332757600080fd5b810190808051906020019092919050505060ff161115151561334857600080fd5b8773ffffffffffffffffffffffffffffffffffffffff1663b1f8d9ba6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156133ac57600080fd5b505af11580156133c0573d6000803e3d6000fd5b505050506040513d60208110156133d657600080fd5b81019080805190602001909291905050508973ffffffffffffffffffffffffffffffffffffffff1663b1f8d9ba6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561344b57600080fd5b505af115801561345f573d6000803e3d6000fd5b505050506040513d602081101561347557600080fd5b810190808051906020019092919050505014151561349257600080fd5b600d6012805490501015156134a657600080fd5b6134ae613b7d565b94508773ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561351457600080fd5b505af1158015613528573d6000803e3d6000fd5b505050506040513d602081101561353e57600080fd5b810190808051906020019092919050505093508360ff168510156135f4576000955061357a898934336015613d6f90949392919063ffffffff16565b507fea6be648d373c4709986e67f6b7ee9ef9875b1243f38efc6bd48024bc10f8aac8787604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1681526020019250505060405180910390a18686965096506137c5565b6135fd85613f37565b9250825191506136ae838973ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561366b57600080fd5b505af115801561367f573d6000803e3d6000fd5b505050506040513d602081101561369557600080fd5b810190808051906020019092919050505060ff166141e4565b90506136bb8989836142c5565b96506001955061371334601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b4490919063ffffffff16565b601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f422ca471d1a1b69b87453d0f5149fd001dc7fd04fc2b5b8b8d70b17398a9b85a8787604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1681526020019250505060405180910390a15b50505050509250929050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600e6020528060005260406000206000915054906101000a900461ffff1681565b613820614a38565b60008060008060606000806060600080600060011515600460009054906101000a900460ff16151514151561385457600080fd5b600a9a50600099505b613867601561468e565b8a108061387357508a8a105b15613b1d575a9850613883613b7d565b975060008811151561389457613b1d565b61389d88613f37565b96508651955087861415156138b157613b1d565b6138c58660156146a590919063ffffffff16565b15156138d057613b1d565b6138da601561476f565b809650819d505050613991878d6020015173ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561394e57600080fd5b505af1158015613962573d6000803e3d6000fd5b505050506040513d602081101561397857600080fd5b810190808051906020019092919050505060ff166141e4565b93506139a68c600001518d60200151866142c5565b9250600160ff1691507f422ca471d1a1b69b87453d0f5149fd001dc7fd04fc2b5b8b8d70b17398a9b85a8383604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a13a5a8a03811515613a2757fe5b0490503273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015613a70573d6000803e3d6000fd5b50613ac9858203601360008f6040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b2b90919063ffffffff16565b601360008e6040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555089806001019a505061385d565b505050505050505050505050565b6000828211151515613b3957fe5b818303905092915050565b60008183019050828110151515613b5757fe5b80905092915050565b6001600460006101000a81548160ff021916908315150217905550565b60008060009150600090505b600d80549050811015613d6857600d81815481101515613ba557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae897c556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015613c3357600080fd5b505af1158015613c47573d6000803e3d6000fd5b505050506040513d6020811015613c5d57600080fd5b810190808051906020019092919050505060ff16600d82815481101515613c8057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c3f6acf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015613d0e57600080fd5b505af1158015613d22573d6000803e3d6000fd5b505050506040513d6020811015613d3857600080fd5b810190808051906020019092919050505060ff161415613d5b5781806001019250505b8080600101915050613b89565b8191505090565b600085600001805490506001876000018054905001111515613d9057600080fd5b856000016060604051908101604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505085600101839080600181540180825580915050906001820390600052602060002001600090919290919091505550613f2c8661468e565b905095945050505050565b60608060008084604051908082528060200260200182016040528015613f6c5781602001602082028038833980820191505090505b50925060009150600090505b600d805490508110156141d957600d81815481101515613f9457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae897c556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561402257600080fd5b505af1158015614036573d6000803e3d6000fd5b505050506040513d602081101561404c57600080fd5b810190808051906020019092919050505060ff16600d8281548110151561406f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c3f6acf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156140fd57600080fd5b505af1158015614111573d6000803e3d6000fd5b505050506040513d602081101561412757600080fd5b810190808051906020019092919050505060ff1614156141cc57600d8181548110151561415057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838380600101945081518110151561418f57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080600101915050613f78565b829350505050919050565b6060806000836040519080825280602002602001820160405280156142185781602001602082028038833980820191505090505b50925061422783518651612fd1565b9150600090505b82518110156142bd5784828281518110151561424657fe5b9060200190602002015181518110151561425c57fe5b90602001906020020151838281518110151561427457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808060010191505061422e565b505092915050565b600060011515600460009054906101000a900460ff1615151415156142e957600080fd5b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c695d2b8585856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019060200280838360005b838110156143fc5780820151818401526020810190506143e1565b50505050905001945050505050602060405180830381600087803b15801561442357600080fd5b505af1158015614437573d6000803e3d6000fd5b505050506040513d602081101561444d57600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561449957fe5b60ff8173ffffffffffffffffffffffffffffffffffffffff1663cc0e82c16040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156144ff57600080fd5b505af1158015614513573d6000803e3d6000fd5b505050506040513d602081101561452957600080fd5b810190808051906020019092919050505060ff1614151561454657fe5b60128190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050601280549050601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16638129fc1c6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561466f57600080fd5b505af1158015614683573d6000803e3d6000fd5b505050509392505050565b600081600201548260000180549050039050919050565b60006146af614a38565b6146b88461479e565b508091505082816020015173ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561472657600080fd5b505af115801561473a573d6000803e3d6000fd5b505050506040513d602081101561475057600080fd5b810190808051906020019092919050505060ff16111591505092915050565b614777614a38565b60006147828361479e565b809250819350505061479383614905565b818191509150915091565b6147a6614a38565b60008260000183600201548154811015156147bd57fe5b90600052602060002090600302018360010184600201548154811015156147e057fe5b906000526020600020015481606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050915091509150915091565b806002016000815480929190600101919050555080600001600182600201540381548110151561493157fe5b9060005260206000209060030201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508060010160018260020154038154811015156149cf57fe5b906000526020600020016000905550565b815481835581811115614a0757818360005260206000209182019101614a069190614a9c565b5b505050565b815481835581811115614a3357818360005260206000209182019101614a329190614a9c565b5b505050565b606060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b614abe91905b80821115614aba576000816000905550600101614aa2565b5090565b905600a165627a7a7230582095d94c52e0bcd7c0b71b1c954dd1888b6ba4b7fe813ef93a2377e4e2641a439e0029",
  "sourceMap": "1007:2333:22:-;;;81:5:16;55:31;;;;;;;;;;;;;;;;;;;;1799:456:22;8:9:-1;5:2;;;30:1;27;20:12;5:2;1799:456:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2035:11;2048:12;5031::28;1532:19:32;1597:11;:28;;;;1532:19;1635:8;:20;1644:10;1635:20;;;;;;;;;;;;;;;:37;;;;138:5:16;124:11;;:19;;;;;;;;;;;;;;;;;;509:10:35;501:5;;:18;;;;;;;;;;;;;;;;;;4063:1:31;4039:26;;:12;:26;;;;4031:35;;;;;;;;4146:12;4126:17;;:32;;;;;;;;;;;;;;;;;;3823:342;5168:1:28;5145:25;;:11;:25;;;;5137:34;;;;;;;;5253:11;5231:19;;:33;;;;;;;;;;;;;;;;;;5455:23;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5455:23:28;5433:19;;:45;;;;;;;;;;;;;;;;;;4793:692;;1799:456:22;;1007:2333;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1007:2333:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;855:39:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;855:39:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;855:39:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1803:188:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1803:188:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6070:778:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6070:778:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6124:180:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6124:180:31;;;;;;;;;;;;;;;;;;;;;;;5345:316;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5345:316:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;55:31:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;55:31:16;;;;;;;;;;;;;;;;;;;;;;;;;;;10232:996:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10232:996:28;;;;;;1790:88:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1790:88:32;;;;;;;;;;;;;;;;;;;;;;;2069:32:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2069:32:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2580:33:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2580:33:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;736:444:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;736:444:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3250:49:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3250:49:28;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:57:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1494:57:32;;;;;;;;;;;;;;;;;;;;;;;943:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;943:34:32;;;;;;;;;;;;;;;;;;;;;;;2163:46:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2163:46:28;;;;;;;;;;;;;;;;;;;;;;;;;;;1252:41:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1252:41:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2668:114:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2668:114:28;;;;;;;;;;;;;;;;;;;;;;;2480:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2480:46:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7622:337:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7622:337:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3617:403:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3617:403:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3031:48:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3031:48:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1131:99:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1131:99:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5833:228:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5833:228:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;2569:435:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2569:435:22;;;;;;3081:50:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3081:50:28;;;;;;;;;;;;;;;;;;;;;;;;;;;6478:1138:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6478:1138:31;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:35;;;;;;;;;;;;;;;;;;;;;;;;;;;900:37:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;900:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;900:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;608:321:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;608:321:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8117:1237:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8117:1237:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;2893:262:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2893:262:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2310:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2310:126:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17763:317:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17763:317:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;17763:317:28;;;;;;;;;;;;;;;;;832:174:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;832:174:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;7060:2865:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1927:42:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1927:42:31;;;;;;;;;;;;;;;;;;;;;;;;;;;2613:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2613:49:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;855:39:32;;;;;;;;;;;;;;;;;;;;:::o;1803:188:39:-;1870:4;1914:6;1882:7;:19;1890:10;1882:19;;;;;;;;;;;;;;;:29;1902:8;1882:29;;;;;;;;;;;;;;;:38;;;;1952:8;1931:38;;1940:10;1931:38;;;1962:6;1931:38;;;;;;;;;;;;;;;;;;1982:4;1975:11;;1803:188;;;;:::o;6070:778:28:-;6212:4;6315:12;6691:17;453:4:16;438:19;;:11;;;;;;;;;;;:19;;;430:28;;;;;;;;6330:12:28;:18;6343:4;6330:18;;;;;;;;;;;;;;;;;;;;;;;;;6315:33;;6425:1;6416:5;:10;;;6412:53;;;6449:5;6442:12;;;;6412:53;6619:7;;;;;;;;6711:10;6722:5;6711:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6691:37;;6836:4;6829:11;;:3;:11;;;6822:19;;468:1:16;6070:778:28;;;;;:::o;6124:180:31:-;6214:4;453::16;438:19;;:11;;;;;;;;;;;:19;;;430:28;;;;;;;;6279:11:31;:18;;;;6272:25;;6124:180;:::o;5345:316::-;653:5:35;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;5650:4:31;5617:16;:30;5634:12;5617:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;5345:316;:::o;55:31:16:-;;;;;;;;;;;;;:::o;10232:996:28:-;10379:12;10475:17;10613:7;10961:22;453:4:16;438:19;;:11;;;;;;;;;;;:19;;;430:28;;;;;;;;10394:12:28;:24;10407:10;10394:24;;;;;;;;;;;;;;;;;;;;;;;;;10379:39;;10445:1;10436:5;:10;;;;10428:19;;;;;;;;10457:7;;;;;;;;10495:10;10506:5;10495:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10475:37;;10546:10;10530:26;;10538:3;10530:26;;;10522:35;;;;;;;;10623:1;10613:11;;10608:192;10631:3;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10631:24:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10631:24:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10631:24:28;;;;;;;;;;;;;;;;10626:2;:29;10608:192;;;10709:4;10681:32;;:3;:20;;;10702:2;10681:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10681:24:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10681:24:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10681:24:28;;;;;;;;;;;;;;;;:32;;;10677:113;;;10733:3;:17;;;10751:2;10733:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10733:21:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10733:21:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10733:21:28;;;;;;;;;;;;;;;;:40;;;:42;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10733:42:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10733:42:28;;;;10677:113;10657:4;;;;;;;10608:192;;;10925:12;:26;10946:3;10925:26;;;;;;;;;;;;;;;;10918:33;;;;;;;;;;;11006:10;11037:1;11017:10;:17;;;;:21;11006:33;;;;;;;;;;;;;;;;;;;;;;;;;;;10986:10;10997:5;10986:17;;;;;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;10961:78;;11082:1;11074:5;:9;11049:12;:22;11062:8;11049:22;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;11093:10;:19;;;;;;;;;;;;:::i;:::-;;11205:16;:14;:16::i;:::-;10232:996;;;;:::o;1790:88:32:-;1834:7;1860:11;;1853:18;;1790:88;:::o;2069:32:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2580:33:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;736:444:39:-;818:4;853:1;838:17;;:3;:17;;;;830:26;;;;;;;;880:8;:15;889:5;880:15;;;;;;;;;;;;;;;;870:6;:25;;862:34;;;;;;;;920:7;:14;928:5;920:14;;;;;;;;;;;;;;;:26;935:10;920:26;;;;;;;;;;;;;;;;910:6;:36;;902:45;;;;;;;;972:27;992:6;972:8;:15;981:5;972:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;954:8;:15;963:5;954:15;;;;;;;;;;;;;;;:45;;;;1021:25;1039:6;1021:8;:13;1030:3;1021:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;1005:8;:13;1014:3;1005:13;;;;;;;;;;;;;;;:41;;;;1081:38;1112:6;1081:7;:14;1089:5;1081:14;;;;;;;;;;;;;;;:26;1096:10;1081:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;1052:7;:14;1060:5;1052:14;;;;;;;;;;;;;;;:26;1067:10;1052:26;;;;;;;;;;;;;;;:67;;;;1146:3;1130:28;;1139:5;1130:28;;;1151:6;1130:28;;;;;;;;;;;;;;;;;;1171:4;1164:11;;736:444;;;;;:::o;3250:49:28:-;3298:1;3250:49;:::o;1494:57:32:-;1532:19;1494:57;:::o;943:34::-;975:2;943:34;:::o;2163:46:28:-;;;;;;;;;;;;;:::o;1252:41:22:-;;;:::o;2668:114:28:-;2732:7;453:4:16;438:19;;:11;;;;;;;;;;;:19;;;430:28;;;;;;;;2758:10:28;:17;;;;2751:24;;2668:114;:::o;2480:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;7622:337:31:-;453:4:16;438:19;;:11;;;;;;;;;;;:19;;;430:28;;;;;;;;7622:337:31;;:::o;3617:403:39:-;3700:4;3712:13;3728:7;:19;3736:10;3728:19;;;;;;;;;;;;;;;:29;3748:8;3728:29;;;;;;;;;;;;;;;;3712:45;;3786:8;3767:16;:27;3763:164;;;3836:1;3804:7;:19;3812:10;3804:19;;;;;;;;;;;;;;;:29;3824:8;3804:29;;;;;;;;;;;;;;;:33;;;;3763:164;;;3890:30;3903:16;3890:8;:12;;:30;;;;:::i;:::-;3858:7;:19;3866:10;3858:19;;;;;;;;;;;;;;;:29;3878:8;3858:29;;;;;;;;;;;;;;;:62;;;;3763:164;3958:8;3937:61;;3946:10;3937:61;;;3968:7;:19;3976:10;3968:19;;;;;;;;;;;;;;;:29;3988:8;3968:29;;;;;;;;;;;;;;;;3937:61;;;;;;;;;;;;;;;;;;4011:4;4004:11;;3617:403;;;;;:::o;3031:48:31:-;;;;;;;;;;;;;;;;;;;;;;:::o;1131:99:36:-;1187:7;1209:8;:16;1218:6;1209:16;;;;;;;;;;;;;;;;1202:23;;1131:99;;;:::o;5833:228:31:-;653:5:35;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;6024:16:31;:30;6041:12;6024:30;;;;;;;;;;;;;;;;6017:37;;;;;;;;;;;5833:228;:::o;2569:435:22:-;653:5:35;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;353:233:17;;;;;;;;;;;;;;;;;;531:5;513:23;;:9;523:3;513:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;513:14:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;505:32;;;;;;;;2891:4:22;2854:42;;:17;;;;;;;;;;;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2854:25:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2854:25:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2854:25:22;;;;;;;;;;;;;;;;:42;;;2846:51;;;;;;;;2954:4;2915:44;;:19;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2915:27:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2915:27:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2915:27:22;;;;;;;;;;;;;;;;:44;;;2907:53;;;;;;;;2971:26;:24;:26::i;:::-;575:4:17;558:9;568:3;558:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;558:14:17;;;;;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;665:1:35;2569:435:22:o;3081:50:28:-;3130:1;3081:50;:::o;6478:1138:31:-;6587:11;6654:17;7123:22;453:4:16;438:19;;:11;;;;;;;;;;;:19;;;430:28;;;;;;;;4731:4:31;4699:36;;:16;:28;4716:10;4699:28;;;;;;;;;;;;;;;;;;;;;;;;;:36;;;4691:45;;;;;;;;6674:10;6654:30;;6826:9;6812:23;;:10;:23;;;6804:32;;;;;;;;6940:10;6919:11;:18;;;;:31;6911:40;;;;;;;;7148:17;;;;;;;;;;;:24;;;7173:9;7148:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7148:35:31;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7148:35:31;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7148:35:31;;;;;;;;;;;;;;;;7123:60;;7292:11;7309:10;7292:28;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7292:28:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7493:11;:18;;;;7447:15;:36;7471:10;7447:36;;;;;;;;;;;;;;;;:65;;;;;;;;;;;;;;;;;;7552:29;7570:10;7552:29;;;;;;;;;;;;;;;;;;;;;;7599:10;7592:17;;6478:1138;;;:::o;238:20:35:-;;;;;;;;;;;;;:::o;900:37:32:-;;;;;;;;;;;;;;;;;;;;:::o;608:321:36:-;671:4;706:1;691:17;;:3;:17;;;;683:26;;;;;;;;733:8;:20;742:10;733:20;;;;;;;;;;;;;;;;723:6;:30;;715:39;;;;;;;;784:32;809:6;784:8;:20;793:10;784:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;761:8;:20;770:10;761:20;;;;;;;;;;;;;;;:55;;;;838:25;856:6;838:8;:13;847:3;838:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;822:8;:13;831:3;822:13;;;;;;;;;;;;;;;:41;;;;895:3;874:33;;883:10;874:33;;;900:6;874:33;;;;;;;;;;;;;;;;;;920:4;913:11;;608:321;;;;:::o;8117:1237:31:-;8314:17;8966:12;9064:23;8220:11;4838:17;4858:10;4838:30;;4907:11;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4907:19:31;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4907:19:31;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4907:19:31;;;;;;;;;;;;;;;;4886:41;;:9;:41;;;4878:50;;;;;;;;4975:1;4946:15;:26;4962:9;4946:26;;;;;;;;;;;;;;;;;;;;;;;;;:30;;;4938:39;;;;;;;;453:4:16;438:19;;:11;;;;;;;;;;;:19;;;430:28;;;;;;;;8334:10:31;8314:30;;8445:11;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8445:18:31;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8445:18:31;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8445:18:31;;;;;;;;;;;;;;;;8415:48;;:11;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8415:26:31;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8415:26:31;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8415:26:31;;;;;;;;;;;;;;;;:48;;;8407:57;;;;;;;;8881:11;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8881:21:31;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8881:21:31;;;;9010:1;8981:15;:26;8997:9;8981:26;;;;;;;;;;;;;;;;;;;;;;;;;:30;8966:45;;9028:15;:26;9044:9;9028:26;;;;;;;;;;;;;;;;9021:33;;;;;;;;;;;9111:11;9144:1;9123:11;:18;;;;:22;9111:35;;;;;;;;;;;;;;;;;;;;;;;;;;;9090:11;9102:5;9090:18;;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;9064:82;;9195:1;9187:5;:9;9156:15;:28;9172:11;9156:28;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;9206:11;:20;;;;;;;;;;;;:::i;:::-;;9315:32;9335:11;9315:32;;;;;;;;;;;;;;;;;;;;;;8117:1237;;;;;;:::o;2893:262:39:-;2971:4;3015:46;3049:11;3015:7;:19;3023:10;3015:19;;;;;;;;;;;;;;;:29;3035:8;3015:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;2983:7;:19;2991:10;2983:19;;;;;;;;;;;;;;;:29;3003:8;2983:29;;;;;;;;;;;;;;;:78;;;;3093:8;3072:61;;3081:10;3072:61;;;3103:7;:19;3111:10;3103:19;;;;;;;;;;;;;;;:29;3123:8;3103:29;;;;;;;;;;;;;;;;3072:61;;;;;;;;;;;;;;;;;;3146:4;3139:11;;2893:262;;;;:::o;2310:126::-;2384:7;2406;:15;2414:6;2406:15;;;;;;;;;;;;;;;:25;2422:8;2406:25;;;;;;;;;;;;;;;;2399:32;;2310:126;;;;:::o;17763:317:28:-;17870:18;17953:6;17925:12;17911:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;17911:27:28;;;;17900:38;;17962:1;17953:10;;17948:126;17969:8;:15;17965:1;:19;17948:126;;;18019:19;;;;;;;;;;;:29;;;18049:13;18019:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18019:44:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18019:44:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18019:44:28;;;;;;;;;;;;;;;;18005:8;18014:1;18005:11;;;;;;;;;;;;;;;;;:58;;;;;17986:3;;;;;;;17948:126;;;17763:317;;;;;:::o;832:174:35:-;653:5;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;928:1;908:22;;:8;:22;;;;900:31;;;;;;;;970:8;942:37;;963:5;;;;;;;;;;;942:37;;;;;;;;;;;;993:8;985:5;;:16;;;;;;;;;;;;;;;;;;832:174;:::o;7060:2865:28:-;7305:28;7399:18;8311:21;8459:18;8918:32;8994:15;9516:36;453:4:16;438:19;;:11;;;;;;;;;;;:19;;;430:28;;;;;;;;7702:2:28;7675:8;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7675:23:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7675:23:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7675:23:28;;;;;;;;;;;;;;;;:29;;;;7667:38;;;;;;;;7830:8;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7830:18:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7830:18:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7830:18:28;;;;;;;;;;;;;;;;7809:7;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7809:17:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7809:17:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7809:17:28;;;;;;;;;;;;;;;;:39;7801:48;;;;;;;;7941:10;7921;:17;;;;:30;7913:39;;;;;;;;8335:19;:17;:19::i;:::-;8311:43;;8480:8;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8480:23:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8480:23:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8480:23:28;;;;;;;;;;;;;;;;8459:44;;8541:12;8533:21;;8517:13;:37;8513:308;;;3130:1;8570:39;;8623:63;8645:7;8654:8;8664:9;8675:10;8623:17;:21;;:63;;;;;;;:::i;:::-;;8705:54;8730:14;8746:12;8705:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8781:14;8797:12;8773:37;;;;;;8513:308;8953:31;8970:13;8953:16;:31::i;:::-;8918:66;;9012:11;:18;8994:36;;9555:63;9581:11;9594:8;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9594:23:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9594:23:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9594:23:28;;;;;;;;;;;;;;;;9555:63;;:25;:63::i;:::-;9516:102;;9646:53;9664:7;9673:8;9683:15;9646:17;:53::i;:::-;9629:70;;3298:1;9709:38;;9818:35;9843:9;9818:8;:20;9827:10;9818:20;;;;;;;;;;;;;;;;:24;;:35;;;;:::i;:::-;9795:8;:20;9804:10;9795:20;;;;;;;;;;;;;;;:58;;;;9869:49;9889:14;9905:12;9869:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:1:16;7060:2865:28;;;;;;;;;;:::o;1927:42:31:-;;;;;;;;;;;;;:::o;2613:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;11476:2262:28:-;11573:38;;:::i;:::-;11669:29;11779:9;11921:15;12100:21;12384:32;12464:15;12787:13;13003:36;13129:33;13250:15;13420:24;453:4:16;438:19;;:11;;;;;;;;;;;:19;;;430:28;;;;;;;;11701:2:28;11669:34;;11791:1;11779:13;;11774:1958;11799:30;:17;:28;:30::i;:::-;11795:1;:34;11794:70;;;;11839:24;11835:1;:28;11794:70;11774:1958;;;11939:7;11921:25;;12124:19;:17;:19::i;:::-;12100:43;;12238:1;12221:13;:18;;12217:62;;;12259:5;;12217:62;12419:31;12436:13;12419:16;:31::i;:::-;12384:66;;12482:11;:18;12464:36;;12532:13;12518:10;:27;;12514:71;;;12565:5;;12514:71;12671:62;12722:10;12671:17;:50;;:62;;;;:::i;:::-;12670:63;12666:107;;;12753:5;;12666:107;12867:30;:17;:28;:30::i;:::-;12846:51;;;;;;;;13042:72;13068:11;13081:9;:17;;;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13081:32:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13081:32:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13081:32:28;;;;;;;;;;;;;;;;13042:72;;:25;:72::i;:::-;13003:111;;13165:71;13183:9;:16;;;13201:9;:17;;;13220:15;13165:17;:71::i;:::-;13129:107;;3298:1;13250:41;;;;13311:52;13331:19;13352:10;13311:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;13472:11;13461:7;13448:10;:20;13447:36;;;;;;;;13420:63;;13532:9;:18;;:39;13551:19;13532:39;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13532:39:28;13662:59;13715:5;13693:19;:27;13662:8;:26;13671:9;:16;;;13662:26;;;;;;;;;;;;;;;;:30;;:59;;;;:::i;:::-;13633:8;:26;13642:9;:16;;;13633:26;;;;;;;;;;;;;;;:88;;;;11866:3;;;;;;;11774:1958;;;11476:2262;;;;;;;;;;;;:::o;836:110:34:-;894:7;921:1;916;:6;;909:14;;;;;;940:1;936;:5;929:12;;836:110;;;;:::o;1008:123::-;1066:9;1091:1;1087;:5;1083:9;;1110:1;1105;:6;;1098:14;;;;;;1125:1;1118:8;;1008:123;;;;:::o;156:64:16:-;209:4;195:11;;:18;;;;;;;;;;;;;;;;;;156:64::o;16537:429:28:-;16629:20;16753:6;16737:1;16719:19;;16762:1;16753:10;;16748:180;16769:11;:18;;;;16765:1;:22;16748:180;;;16845:11;16857:1;16845:14;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16845:21:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16845:21:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16845:21:28;;;;;;;;;;;;;;;;16812:54;;:11;16824:1;16812:14;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16812:29:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16812:29:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16812:29:28;;;;;;;;;;;;;;;;:54;;;16808:110;;;16886:17;;;;;;;16808:110;16789:3;;;;;;;16748:180;;;16944:15;16937:22;;16537:429;;:::o;708:434:13:-;883:4;938:6;:15;;:22;;;;933:1;908:6;:15;;:22;;;;:26;907:53;899:62;;;;;;;;1003:6;:15;;1024:37;;;;;;;;;1034:7;1024:37;;;;;;1043:8;1024:37;;;;;;1053:7;1024:37;;;;;1003:59;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1003:59:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1072:6;:15;;1093:6;1072:28;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1072:28:13;;;;;;;;;;;;;;;;;;;;;;1117:18;1128:6;1117:10;:18::i;:::-;1110:25;;708:434;;;;;;;:::o;17212:545:28:-;17335:13;17408:32;17486:18;17523:6;17461:14;17443:33;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;17443:33:28;;;;17408:68;;17507:1;17486:22;;17532:1;17523:10;;17518:205;17539:11;:18;;;;17535:1;:22;17518:205;;;17615:11;17627:1;17615:14;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17615:21:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17615:21:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17615:21:28;;;;;;;;;;;;;;;;17582:54;;:11;17594:1;17582:14;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17582:29:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17582:29:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17582:29:28;;;;;;;;;;;;;;;;:54;;;17578:135;;;17684:11;17696:1;17684:14;;;;;;;;;;;;;;;;;;;;;;;;;;;17656:11;17668:12;;;;;;17656:25;;;;;;;;;;;;;;;;;:42;;;;;;;;;;;17578:135;17559:3;;;;;;;17518:205;;;17739:11;17732:18;;17212:545;;;;;;:::o;15619:715::-;15901:29;16066:30;16207:6;16033:22;16015:41;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;16015:41:28;;;;15997:59;;16099:93;16127:15;:22;16171:12;:19;16099:14;:93::i;:::-;16066:126;;16216:1;16207:10;;16202:126;16223:15;:22;16219:1;:26;16202:126;;;16287:12;16300:13;16314:1;16300:16;;;;;;;;;;;;;;;;;;16287:30;;;;;;;;;;;;;;;;;;16266:15;16282:1;16266:18;;;;;;;;;;;;;;;;;:51;;;;;;;;;;;16247:3;;;;;;;16202:126;;;15619:715;;;;;;:::o;14025:1346::-;14622:28;453:4:16;438:19;;:11;;;;;;;;;;;:19;;;430:28;;;;;;;;14841:19:28;;;;;;;;;;;:26;;;14868:7;14877:8;14887:16;14841:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14841:63:28;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14841:63:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14841:63:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14841:63:28;;;;;;;;;;;;;;;;14824:80;;15007:1;14981:28;;:14;:28;;;;14974:36;;;;;;15169:4;15139:14;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15139:26:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15139:26:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15139:26:28;;;;;;;;;;;;;;;;:34;;;15132:42;;;;;;15229:10;15245:14;15229:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15229:31:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15308:10;:17;;;;15270:12;:28;15283:14;15270:28;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;15337:14;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15337:27:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15337:27:28;;;;14025:1346;;;;;:::o;460:174:13:-;550:10;606:6;:21;;;581:6;:15;;:22;;;;:46;573:54;;460:174;;;:::o;1385:312::-;1532:4;1548:29;;:::i;:::-;1605:12;1610:6;1605:4;:12::i;:::-;1587:30;;;;;1673:17;1634:12;:20;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1634:35:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1634:35:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1634:35:13;;;;;;;;;;;;;;;;:56;;;;1627:63;;1385:312;;;;;:::o;1861:277::-;1942:22;;:::i;:::-;1966:13;2015:12;2020:6;2015:4;:12::i;:::-;1991:36;;;;;;;;2079:14;2086:6;2079;:14::i;:::-;2111:12;2125:5;2103:28;;;;1861:277;;;:::o;2189:201::-;2263:9;;:::i;:::-;2274:10;2304:6;:15;;2320:6;:21;;;2304:38;;;;;;;;;;;;;;;;;;;;2344:6;:15;;2360:6;:21;;;2344:38;;;;;;;;;;;;;;;;;;2296:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:201;;;:::o;2439:282::-;2513:6;:21;;;:23;;;;;;;;;;;;;2584:6;:15;;2624:1;2600:6;:21;;;:25;2584:42;;;;;;;;;;;;;;;;;;;;;2577:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2672:6;:15;;2712:1;2688:6;:21;;;:25;2672:42;;;;;;;;;;;;;;;;;2665:49;;;2439:282;:::o;1007:2333:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.4.23;\n\nimport \"../lifecycle/OnlyOnce.sol\";\nimport \"../nodes/IWorkerNode.sol\";\nimport \"../entities/IDataEntity.sol\";\nimport \"./factories/CognitiveJobFactory.sol\";\nimport \"./factories/WorkerNodeFactory.sol\";\nimport \"./managers/CognitiveJobManager.sol\";\nimport \"./lottery/RoundRobinLottery.sol\";\n\nimport \"./IPandora.sol\";\n\n/**\n * @title Pandora Smart Contract\n * @author \"Dr Maxim Orlovsky\" <orlovsky@pandora.foundation>\n *\n * @dev # Pandora Smart Contract\n *\n * Main & root contract implementing the first level of Pandora Boxchain consensus\n * See section [\"3.3. Proof of Cognitive Work (PoCW)\" in Pandora white paper](https://steemit.com/cryptocurrency/%40pandoraboxchain/world-decentralized-ai-on-blockchain-with-cognitive-mining-and-open-markets-for-data-and-algorithms-pandora-boxchain)\n * for more details.\n *\n * Contract token functionality is separated into a separate contract named PAN (after the name of the token)\n * and Pandora contracts just simply inherits PAN contract.\n */\n\ncontract Pandora is IPandora, OnlyOnce, CognitiveJobManager {\n\n    /*******************************************************************************************************************\n     * ## Storage\n     */\n\n    /// ### Public variables\n\n    bytes32 public constant version = \"0.3.9\";\n\n\n    /*******************************************************************************************************************\n     * ## Events\n     */\n\n\n    /*******************************************************************************************************************\n     * ## Constructor and initialization\n     */\n\n    /// ### Constructor\n    /// @dev Constructor receives addresses for the owners of whitelisted worker nodes, which will be assigned an owners\n    /// of worker nodes contracts\n    constructor(\n        CognitiveJobFactory _jobFactory, /// Factory class for creating CognitiveJob contracts\n        WorkerNodeFactory _nodeFactory /// Factory class for creating WorkerNode contracts\n    ) public\n    CognitiveJobManager(_jobFactory, _nodeFactory)\n    // Ensure that the contract is still uninitialized and `initialize` function be called to check the proper\n    // setup of class factories\n    Initializable()\n    Ownable() {         \n    }\n\n    /// ### Initialization\n    /// @notice Function that checks the proper setup of class factories. May be called only once and only by Pandora\n    /// contract owner.\n    /// @dev Function that checks the proper setup of class factories. May be called only once and only by Pandora\n    /// contract owner.\n    function initialize()\n    public\n    onlyOwner\n    onlyOnce(\"initialize\") {\n        // Checks that the factory contracts creator has assigned Pandora as an owner of the factory contracts:\n        // an important security measure preventing \"Parity-style\" contract bugs\n        require(workerNodeFactory.owner() == address(this));\n        require(cognitiveJobFactory.owner() == address(this));\n\n        Initializable.initialize();\n    }\n\n    /*******************************************************************************************************************\n     * ## Modifiers\n     */\n\n\n    /*******************************************************************************************************************\n     * ## Functions\n     */\n\n    /// ### Public and external\n}\n",
  "sourcePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/Pandora.sol",
  "ast": {
    "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/Pandora.sol",
    "exportedSymbols": {
      "Pandora": [
        3310
      ]
    },
    "id": 3311,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3242,
        "literals": [
          "solidity",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/lifecycle/OnlyOnce.sol",
        "file": "../lifecycle/OnlyOnce.sol",
        "id": 3243,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 2522,
        "src": "25:35:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/nodes/IWorkerNode.sol",
        "file": "../nodes/IWorkerNode.sol",
        "id": 3244,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 2608,
        "src": "61:34:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/entities/IDataEntity.sol",
        "file": "../entities/IDataEntity.sol",
        "id": 3245,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 621,
        "src": "96:37:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/factories/CognitiveJobFactory.sol",
        "file": "./factories/CognitiveJobFactory.sol",
        "id": 3246,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 3360,
        "src": "134:45:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/factories/WorkerNodeFactory.sol",
        "file": "./factories/WorkerNodeFactory.sol",
        "id": 3247,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 3413,
        "src": "180:43:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/managers/CognitiveJobManager.sol",
        "file": "./managers/CognitiveJobManager.sol",
        "id": 3248,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 4302,
        "src": "224:44:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/lottery/RoundRobinLottery.sol",
        "file": "./lottery/RoundRobinLottery.sol",
        "id": 3249,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 3510,
        "src": "269:41:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/IPandora.sol",
        "file": "./IPandora.sol",
        "id": 3250,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 3241,
        "src": "312:24:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3251,
              "name": "IPandora",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3240,
              "src": "1027:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPandora_$3240",
                "typeString": "contract IPandora"
              }
            },
            "id": 3252,
            "nodeType": "InheritanceSpecifier",
            "src": "1027:8:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3253,
              "name": "OnlyOnce",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2521,
              "src": "1037:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OnlyOnce_$2521",
                "typeString": "contract OnlyOnce"
              }
            },
            "id": 3254,
            "nodeType": "InheritanceSpecifier",
            "src": "1037:8:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3255,
              "name": "CognitiveJobManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4301,
              "src": "1047:19:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CognitiveJobManager_$4301",
                "typeString": "contract CognitiveJobManager"
              }
            },
            "id": 3256,
            "nodeType": "InheritanceSpecifier",
            "src": "1047:19:22"
          }
        ],
        "contractDependencies": [
          2490,
          2521,
          3240,
          4301,
          4347,
          4390,
          4681,
          4726,
          4908,
          5004,
          5047,
          5079,
          5325
        ],
        "contractKind": "contract",
        "documentation": "@title Pandora Smart Contract\n@author \"Dr Maxim Orlovsky\" <orlovsky@pandora.foundation>\n * @dev # Pandora Smart Contract\n * Main & root contract implementing the first level of Pandora Boxchain consensus\nSee section [\"3.3. Proof of Cognitive Work (PoCW)\" in Pandora white paper](https://steemit.com/cryptocurrency/%40pandoraboxchain/world-decentralized-ai-on-blockchain-with-cognitive-mining-and-open-markets-for-data-and-algorithms-pandora-boxchain)\nfor more details.\n * Contract token functionality is separated into a separate contract named PAN (after the name of the token)\nand Pandora contracts just simply inherits PAN contract.",
        "fullyImplemented": true,
        "id": 3310,
        "linearizedBaseContracts": [
          3310,
          4301,
          4681,
          2521,
          3240,
          4390,
          4908,
          4347,
          2490,
          4726,
          5325,
          5004,
          5047,
          5079
        ],
        "name": "Pandora",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3259,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 3310,
            "src": "1252:41:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3257,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1252:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e332e39",
              "id": 3258,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1286:7:22",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d1a86d11ae93f68c27fbcffc845ab841a29535db81a3b42b9af76d54e3dafac2",
                "typeString": "literal_string \"0.3.9\""
              },
              "value": "0.3.9"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3274,
              "nodeType": "Block",
              "src": "2239:16:22",
              "statements": []
            },
            "documentation": "### Constructor\n @dev Constructor receives addresses for the owners of whitelisted worker nodes, which will be assigned an owners\n of worker nodes contracts",
            "id": 3275,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3266,
                    "name": "_jobFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3261,
                    "src": "2035:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CognitiveJobFactory_$3359",
                      "typeString": "contract CognitiveJobFactory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3267,
                    "name": "_nodeFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3263,
                    "src": "2048:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkerNodeFactory_$3412",
                      "typeString": "contract WorkerNodeFactory"
                    }
                  }
                ],
                "id": 3268,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3265,
                  "name": "CognitiveJobManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4301,
                  "src": "2015:19:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CognitiveJobManager_$4301_$",
                    "typeString": "type(contract CognitiveJobManager)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2015:46:22"
              },
              {
                "arguments": [],
                "id": 3270,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3269,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2490,
                  "src": "2209:13:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$2490_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2209:15:22"
              },
              {
                "arguments": [],
                "id": 3272,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3271,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4908,
                  "src": "2229:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$4908_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2229:9:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3261,
                  "name": "_jobFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3275,
                  "src": "1820:31:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CognitiveJobFactory_$3359",
                    "typeString": "contract CognitiveJobFactory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3260,
                    "name": "CognitiveJobFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3359,
                    "src": "1820:19:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CognitiveJobFactory_$3359",
                      "typeString": "contract CognitiveJobFactory"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3263,
                  "name": "_nodeFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3275,
                  "src": "1915:30:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WorkerNodeFactory_$3412",
                    "typeString": "contract WorkerNodeFactory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3262,
                    "name": "WorkerNodeFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3412,
                    "src": "1915:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkerNodeFactory_$3412",
                      "typeString": "contract WorkerNodeFactory"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1810:193:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 3273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2239:0:22"
            },
            "scope": 3310,
            "src": "1799:456:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3308,
              "nodeType": "Block",
              "src": "2643:361:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3284,
                              "name": "workerNodeFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4402,
                              "src": "2854:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WorkerNodeFactory_$3412",
                                "typeString": "contract WorkerNodeFactory"
                              }
                            },
                            "id": 3285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4856,
                            "src": "2854:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2854:25:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3288,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5429,
                              "src": "2891:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Pandora_$3310",
                                "typeString": "contract Pandora"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Pandora_$3310",
                                "typeString": "contract Pandora"
                              }
                            ],
                            "id": 3287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2883:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2883:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2854:42:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5343,
                        5344
                      ],
                      "referencedDeclaration": 5343,
                      "src": "2846:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2846:51:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3292,
                  "nodeType": "ExpressionStatement",
                  "src": "2846:51:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3294,
                              "name": "cognitiveJobFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3526,
                              "src": "2915:19:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CognitiveJobFactory_$3359",
                                "typeString": "contract CognitiveJobFactory"
                              }
                            },
                            "id": 3295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4856,
                            "src": "2915:25:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2915:27:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3298,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5429,
                              "src": "2954:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Pandora_$3310",
                                "typeString": "contract Pandora"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Pandora_$3310",
                                "typeString": "contract Pandora"
                              }
                            ],
                            "id": 3297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2946:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2946:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2915:44:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5343,
                        5344
                      ],
                      "referencedDeclaration": 5343,
                      "src": "2907:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2907:53:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3302,
                  "nodeType": "ExpressionStatement",
                  "src": "2907:53:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3303,
                        "name": "Initializable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2490,
                        "src": "2971:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Initializable_$2490_$",
                          "typeString": "type(contract Initializable)"
                        }
                      },
                      "id": 3305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2479,
                      "src": "2971:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2971:26:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3307,
                  "nodeType": "ExpressionStatement",
                  "src": "2971:26:22"
                }
              ]
            },
            "documentation": "### Initialization\n @notice Function that checks the proper setup of class factories. May be called only once and only by Pandora\n contract owner.\n @dev Function that checks the proper setup of class factories. May be called only once and only by Pandora\n contract owner.",
            "id": 3309,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3278,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3277,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4882,
                  "src": "2606:9:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2606:9:22"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "696e697469616c697a65",
                    "id": 3280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2629:12:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7479dc0da7c54b95f10aa182ad0a46400db63156920adb65eca2654c0945a463",
                      "typeString": "literal_string \"initialize\""
                    },
                    "value": "initialize"
                  }
                ],
                "id": 3281,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3279,
                  "name": "onlyOnce",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2520,
                  "src": "2620:8:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2620:22:22"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2588:2:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 3282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2643:0:22"
            },
            "scope": 3310,
            "src": "2569:435:22",
            "stateMutability": "nonpayable",
            "superFunction": 2479,
            "visibility": "public"
          }
        ],
        "scope": 3311,
        "src": "1007:2333:22"
      }
    ],
    "src": "0:3341:22"
  },
  "legacyAST": {
    "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/Pandora.sol",
    "exportedSymbols": {
      "Pandora": [
        3310
      ]
    },
    "id": 3311,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3242,
        "literals": [
          "solidity",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/lifecycle/OnlyOnce.sol",
        "file": "../lifecycle/OnlyOnce.sol",
        "id": 3243,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 2522,
        "src": "25:35:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/nodes/IWorkerNode.sol",
        "file": "../nodes/IWorkerNode.sol",
        "id": 3244,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 2608,
        "src": "61:34:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/entities/IDataEntity.sol",
        "file": "../entities/IDataEntity.sol",
        "id": 3245,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 621,
        "src": "96:37:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/factories/CognitiveJobFactory.sol",
        "file": "./factories/CognitiveJobFactory.sol",
        "id": 3246,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 3360,
        "src": "134:45:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/factories/WorkerNodeFactory.sol",
        "file": "./factories/WorkerNodeFactory.sol",
        "id": 3247,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 3413,
        "src": "180:43:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/managers/CognitiveJobManager.sol",
        "file": "./managers/CognitiveJobManager.sol",
        "id": 3248,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 4302,
        "src": "224:44:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/lottery/RoundRobinLottery.sol",
        "file": "./lottery/RoundRobinLottery.sol",
        "id": 3249,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 3510,
        "src": "269:41:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/IPandora.sol",
        "file": "./IPandora.sol",
        "id": 3250,
        "nodeType": "ImportDirective",
        "scope": 3311,
        "sourceUnit": 3241,
        "src": "312:24:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3251,
              "name": "IPandora",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3240,
              "src": "1027:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPandora_$3240",
                "typeString": "contract IPandora"
              }
            },
            "id": 3252,
            "nodeType": "InheritanceSpecifier",
            "src": "1027:8:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3253,
              "name": "OnlyOnce",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2521,
              "src": "1037:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OnlyOnce_$2521",
                "typeString": "contract OnlyOnce"
              }
            },
            "id": 3254,
            "nodeType": "InheritanceSpecifier",
            "src": "1037:8:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3255,
              "name": "CognitiveJobManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4301,
              "src": "1047:19:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CognitiveJobManager_$4301",
                "typeString": "contract CognitiveJobManager"
              }
            },
            "id": 3256,
            "nodeType": "InheritanceSpecifier",
            "src": "1047:19:22"
          }
        ],
        "contractDependencies": [
          2490,
          2521,
          3240,
          4301,
          4347,
          4390,
          4681,
          4726,
          4908,
          5004,
          5047,
          5079,
          5325
        ],
        "contractKind": "contract",
        "documentation": "@title Pandora Smart Contract\n@author \"Dr Maxim Orlovsky\" <orlovsky@pandora.foundation>\n * @dev # Pandora Smart Contract\n * Main & root contract implementing the first level of Pandora Boxchain consensus\nSee section [\"3.3. Proof of Cognitive Work (PoCW)\" in Pandora white paper](https://steemit.com/cryptocurrency/%40pandoraboxchain/world-decentralized-ai-on-blockchain-with-cognitive-mining-and-open-markets-for-data-and-algorithms-pandora-boxchain)\nfor more details.\n * Contract token functionality is separated into a separate contract named PAN (after the name of the token)\nand Pandora contracts just simply inherits PAN contract.",
        "fullyImplemented": true,
        "id": 3310,
        "linearizedBaseContracts": [
          3310,
          4301,
          4681,
          2521,
          3240,
          4390,
          4908,
          4347,
          2490,
          4726,
          5325,
          5004,
          5047,
          5079
        ],
        "name": "Pandora",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3259,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 3310,
            "src": "1252:41:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3257,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1252:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e332e39",
              "id": 3258,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1286:7:22",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d1a86d11ae93f68c27fbcffc845ab841a29535db81a3b42b9af76d54e3dafac2",
                "typeString": "literal_string \"0.3.9\""
              },
              "value": "0.3.9"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3274,
              "nodeType": "Block",
              "src": "2239:16:22",
              "statements": []
            },
            "documentation": "### Constructor\n @dev Constructor receives addresses for the owners of whitelisted worker nodes, which will be assigned an owners\n of worker nodes contracts",
            "id": 3275,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3266,
                    "name": "_jobFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3261,
                    "src": "2035:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CognitiveJobFactory_$3359",
                      "typeString": "contract CognitiveJobFactory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3267,
                    "name": "_nodeFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3263,
                    "src": "2048:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkerNodeFactory_$3412",
                      "typeString": "contract WorkerNodeFactory"
                    }
                  }
                ],
                "id": 3268,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3265,
                  "name": "CognitiveJobManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4301,
                  "src": "2015:19:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CognitiveJobManager_$4301_$",
                    "typeString": "type(contract CognitiveJobManager)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2015:46:22"
              },
              {
                "arguments": [],
                "id": 3270,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3269,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2490,
                  "src": "2209:13:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$2490_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2209:15:22"
              },
              {
                "arguments": [],
                "id": 3272,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3271,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4908,
                  "src": "2229:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$4908_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2229:9:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3261,
                  "name": "_jobFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3275,
                  "src": "1820:31:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CognitiveJobFactory_$3359",
                    "typeString": "contract CognitiveJobFactory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3260,
                    "name": "CognitiveJobFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3359,
                    "src": "1820:19:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CognitiveJobFactory_$3359",
                      "typeString": "contract CognitiveJobFactory"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3263,
                  "name": "_nodeFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3275,
                  "src": "1915:30:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WorkerNodeFactory_$3412",
                    "typeString": "contract WorkerNodeFactory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3262,
                    "name": "WorkerNodeFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3412,
                    "src": "1915:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkerNodeFactory_$3412",
                      "typeString": "contract WorkerNodeFactory"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1810:193:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 3273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2239:0:22"
            },
            "scope": 3310,
            "src": "1799:456:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3308,
              "nodeType": "Block",
              "src": "2643:361:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3284,
                              "name": "workerNodeFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4402,
                              "src": "2854:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WorkerNodeFactory_$3412",
                                "typeString": "contract WorkerNodeFactory"
                              }
                            },
                            "id": 3285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4856,
                            "src": "2854:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2854:25:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3288,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5429,
                              "src": "2891:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Pandora_$3310",
                                "typeString": "contract Pandora"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Pandora_$3310",
                                "typeString": "contract Pandora"
                              }
                            ],
                            "id": 3287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2883:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2883:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2854:42:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5343,
                        5344
                      ],
                      "referencedDeclaration": 5343,
                      "src": "2846:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2846:51:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3292,
                  "nodeType": "ExpressionStatement",
                  "src": "2846:51:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3294,
                              "name": "cognitiveJobFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3526,
                              "src": "2915:19:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CognitiveJobFactory_$3359",
                                "typeString": "contract CognitiveJobFactory"
                              }
                            },
                            "id": 3295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4856,
                            "src": "2915:25:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2915:27:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3298,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5429,
                              "src": "2954:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Pandora_$3310",
                                "typeString": "contract Pandora"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Pandora_$3310",
                                "typeString": "contract Pandora"
                              }
                            ],
                            "id": 3297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2946:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2946:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2915:44:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5343,
                        5344
                      ],
                      "referencedDeclaration": 5343,
                      "src": "2907:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2907:53:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3302,
                  "nodeType": "ExpressionStatement",
                  "src": "2907:53:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3303,
                        "name": "Initializable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2490,
                        "src": "2971:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Initializable_$2490_$",
                          "typeString": "type(contract Initializable)"
                        }
                      },
                      "id": 3305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2479,
                      "src": "2971:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2971:26:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3307,
                  "nodeType": "ExpressionStatement",
                  "src": "2971:26:22"
                }
              ]
            },
            "documentation": "### Initialization\n @notice Function that checks the proper setup of class factories. May be called only once and only by Pandora\n contract owner.\n @dev Function that checks the proper setup of class factories. May be called only once and only by Pandora\n contract owner.",
            "id": 3309,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3278,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3277,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4882,
                  "src": "2606:9:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2606:9:22"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "696e697469616c697a65",
                    "id": 3280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2629:12:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7479dc0da7c54b95f10aa182ad0a46400db63156920adb65eca2654c0945a463",
                      "typeString": "literal_string \"initialize\""
                    },
                    "value": "initialize"
                  }
                ],
                "id": 3281,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3279,
                  "name": "onlyOnce",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2520,
                  "src": "2620:8:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2620:22:22"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2588:2:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 3282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2643:0:22"
            },
            "scope": 3310,
            "src": "2569:435:22",
            "stateMutability": "nonpayable",
            "superFunction": 2479,
            "visibility": "public"
          }
        ],
        "scope": 3311,
        "src": "1007:2333:22"
      }
    ],
    "src": "0:3341:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xd5136a08b175c4b69ec2cc2b382d167a6eeb11de",
      "transactionHash": "0x73ed624055a14e2aff827e73343706905a27d8bc9b6256c39b255a9ed079aa56"
    },
    "1524826418166": {
      "events": {},
      "links": {},
      "address": "0x366b3001d730e58d45895cf635d5582f8b88abe9",
      "transactionHash": "0x35669561196d08544b6e1170f6f0a0604cf4d714943c6ad6d765d90375535376"
    },
    "1524838618463": {
      "events": {},
      "links": {},
      "address": "0xb349fb172d6d5f693b0aa1c6eec4c61cfd6846f4",
      "transactionHash": "0x81be5c0367735d5045cbed64f20bf7efdb7b2597ef64714ffc44bf434f23c87a"
    },
    "1526661006732": {
      "events": {},
      "links": {},
      "address": "0x9d5a41c822b0284e32e95c7ae5cb6820c4a18d90",
      "transactionHash": "0x6c8e48fa4246073be854a1f916ce000ccb769ae2c43247f7f6c76fb4fe7cdea4"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-19T23:46:28.830Z"
}